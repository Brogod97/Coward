<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="contestMapper">


	<resultMap type="contest" id="contest_rm">
		<id property="contestNo" 		column="CONTEST_NO"/>
		<result property="contestNo" 		column="MEMBER_NO"/>
		<result property="contestTitle" 	column="CONTEST_TITLE"/>
		<result property="companyNick" 	column="COMPANY_NICK"/>
		<result property="companyProfile"  column="COMPANY_PROFILE"/>
		<result property="typeNo" 		column="TYPE_NO"/>
		<result property="subject" 	column="SUBJECT"/>
		<result property="qualification" 	column="QUALIFICATION"/>
		<result property="addInfo" 		column="ADD_INFOMATION"/>
		<result property="createDate" 	column="CREATE_DATE"/>
		<result property="endDate" 	column="END_DATE"/>
		<result property="dueDate" 	column="DUE_DATE"/>
		<result property="skill"    column="SKILL"/>
		<result property="price" 	column="PRICE"/>
		<result property="thumbnail" 	column="THUMBNAIL"/>
		<result property="adNo" 	column="AD_NO"/>
		<result property="adType" 	column="AD_TYPE"/>
		<result property="winner" 	column="WINNER"/>
		<result property="conStatus" 	column="CON_STATUS"/>
		<result property="bookmarkCount" column="BOOKMARK_COUNT"/>
		<result property="attendCount" column="ATTEND_COUNT"/>
	</resultMap>
	
		  <resultMap type="member" id="member_rm">
		<id property="memberNo" 		column="MEMBER_NO"/>
		<result property="memberType" 		column="MEMBER_TYPE"/>
		<result property="memberId" 	column="MEMBER_ID"/>
		<result property="memberPw" 		column="MEMBER_PW"/>
		<result property="memberNick" 	column="MEMBER_NICK"/>
		<result property="profileImg" 	column="PROFILE_IMG"/>
		<result property="phone" 		column="PHONE"/>
		<result property="regionNo" 	column="REGION_NO"/>
		<result property="stack" 	column="STACK"/>
		<result property="stack"    column="SKILL"/>
		<result property="slogan" 	column="SLOGAN"/>
		<result property="introduce" 	column="INTRODUCE"/>
		<result property="totalPrice" 	column="TOTAL_PRICE"/>
		<result property="currPrice" 	column="CURR_PRICE"/>
		<result property="enrollDate" 	column="ENROLL_DATE"/>
		<result property="secessionFlag" 	column="SECESSION_FL"/>
		<result property="termsFlag" 	column="TERMS_FL"/>
		<result property="snsFlag" 	column="SNS_FL"/>
		
		<result property="likeCount" 	column="LIKE_COUNT"/>
		<result property="victoryCount" 	column="VICTORY_COUNT"/>
	 </resultMap>
	
  
	<!-- 공모전 전체 조회  -->
	<select id="getAllContestList" resultMap="contest_rm">
		SELECT CONTEST_NO , CONTEST_TITLE , TRUNC(C.END_DATE - C.CREATE_DATE) AS DUE_DATE, PRICE , c.SKILL , c.AD_NO , AD_TYPE , m.PROFILE_IMG AS COMPANY_PROFILE , m.MEMBER_NICK AS COMPANY_NICK
		FROM CONTEST c, "MEMBER" m , AD a 
		WHERE c.MEMBER_NO  = m.MEMBER_NO 
		AND c.AD_NO = a.AD_NO
	</select>
  
	<!-- 모집중인 공모전 조회 -->
	<select id="getRecruitingContestList" resultMap="contest_rm">
		SELECT CONTEST_NO , CONTEST_TITLE , TRUNC(C.END_DATE - C.CREATE_DATE) AS DUE_DATE, PRICE , c.SKILL , c.AD_NO , AD_TYPE , m.PROFILE_IMG AS COMPANY_PROFILE , m.MEMBER_NICK AS COMPANY_NICK
		FROM CONTEST c, "MEMBER" m , AD a 
		WHERE c.MEMBER_NO  = m.MEMBER_NO 
		AND c.AD_NO = a.AD_NO
		AND TRUNC(END_DATE - CREATE_DATE) &gt; 0
	</select>
  
	<!-- 마감임박 공모전 조회 (2주) -->
	<select id="getImminentContestList" resultMap="contest_rm">
		SELECT CONTEST_NO , CONTEST_TITLE , TRUNC(C.END_DATE - C.CREATE_DATE) AS DUE_DATE, PRICE , c.SKILL , c.AD_NO , AD_TYPE , m.PROFILE_IMG AS COMPANY_PROFILE , m.MEMBER_NICK AS COMPANY_NICK
		FROM CONTEST c, "MEMBER" m , AD a 
		WHERE c.MEMBER_NO  = m.MEMBER_NO 
		AND c.AD_NO = a.AD_NO
		AND TRUNC(END_DATE - CREATE_DATE) &lt; 15
	</select>
  
	<!-- 마감 공모전 조회 -->
	<select id="getEndContestList" resultMap="contest_rm">
	SELECT CONTEST_NO , CONTEST_TITLE , TRUNC(C.END_DATE - C.CREATE_DATE) AS DUE_DATE, PRICE , c.SKILL , c.AD_NO , AD_TYPE , m.PROFILE_IMG AS COMPANY_PROFILE , m.MEMBER_NICK AS COMPANY_NICK
	FROM CONTEST c, "MEMBER" m , AD a 
	WHERE c.MEMBER_NO  = m.MEMBER_NO 
	AND c.AD_NO = a.AD_NO
	AND TRUNC(END_DATE - CREATE_DATE) &lt; 0
	</select>
  
	<!-- Note: 진행중인 공모전 - 기본 -->
	<select id="getDefaultContestList" resultMap="contest_rm">
		SELECT CONTEST_NO,
		CONTEST_TITLE, TRUNC(END_DATE - CREATE_DATE) AS DUE_DATE, PRICE,
		THUMBNAIL
		FROM CONTEST
		WHERE CON_STATUS = '모집중'
		AND TRUNC(END_DATE - CREATE_DATE) > 0
		OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY
	</select>

	<!-- Note: 진행중인 공모전 - 신규 -->
	<select id="getNewContestList" resultMap="contest_rm">
		SELECT CONTEST_NO, CONTEST_TITLE, PRICE, THUMBNAIL, CREATE_DATE, MEMBER_NICK AS COMPANY_NICK
		FROM CONTEST JOIN MEMBER USING(MEMBER_NO)
		WHERE CON_STATUS = '모집중'
		ORDER BY CREATE_DATE DESC
		OFFSET 0 ROWS FETCH NEXT 11
		ROWS ONLY
	</select>

	<!-- Note: 진행중인 공모전 - 인기 -->
	<select id="getPopularContestList" resultMap="contest_rm">
		WITH BookmarkCounts AS (
		    SELECT C.CONTEST_NO, COUNT(LC.CONTEST_NO) AS BOOKMARK_COUNT
		    FROM CONTEST C
		    LEFT JOIN LIKE_CON LC ON LC.CONTEST_NO = C.CONTEST_NO
		    GROUP BY C.CONTEST_NO
		)
		SELECT C.CONTEST_NO AS CONTEST_NO , C.CONTEST_TITLE AS CONTEST_TITLE , TRUNC(C.END_DATE - C.CREATE_DATE) AS DUE_DATE, C.PRICE AS PRICE , C.THUMBNAIL AS THUMBNAIL , BC.BOOKMARK_COUNT AS BOOKMARK_COUNT
		FROM CONTEST C
		LEFT JOIN BookmarkCounts BC ON BC.CONTEST_NO = C.CONTEST_NO
		WHERE C.CON_STATUS = '모집중'
		AND TRUNC(C.END_DATE - C.CREATE_DATE) > 0
		OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY
	</select>

	<!-- 공모전 개최 -->
	<insert id="contestCreate">
		<selectKey keyProperty="contestNo" resultType="_int"
			order="BEFORE">
			SELECT SEQ_CONTEST_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO CONTEST
		(CONTEST_NO,MEMBER_NO,CONTEST_TITLE,TYPE_NO,SUBJECT,QUALIFICATION,ADD_INFOMATION,CREATE_DATE,END_DATE,SKILL,PRICE,THUMBNAIL,AD_NO)
		VALUES( #{contestNo}, #{memberNo} ,#{contestTitle}, #{typeNo},
		#{subject}, #{qualification}, #{addInfo}, SYSDATE, #{endDate},
		#{skill}, #{price}, #{thumbnail} , #{adNo})
	</insert>


	<!-- 공모전 상세조회  -->
	<select id="contestDetail" parameterType="_int" resultMap="contest_rm">
		SELECT CONTEST_NO, CONTEST_TITLE, m.MEMBER_NICK AS COMPANY_NICK ,m.PROFILE_IMG AS COMPANY_PROFILE ,
		TYPE_NO, SUBJECT ,QUALIFICATION ,ADD_INFOMATION , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE, TO_CHAR (END_DATE,'YYYY-MM-DD') AS END_DATE, TRUNC(END_DATE - CREATE_DATE) AS DUE_DATE,
		c.SKILL, PRICE, THUMBNAIL, c.AD_NO, ad.AD_TYPE AS AD_TYPE, CON_STATUS,
		(SELECT COUNT(*)
		FROM LIKE_CON lc
		WHERE CONTEST_NO = ${contestNo}) AS BOOKMARK_COUNT,
		(SELECT COUNT(*)
		FROM CONTEST_ATTEND 
		WHERE CONTEST_NO = ${contestNo}) AS ATTEND_COUNT
		FROM CONTEST c,
		MEMBER m , AD ad
		WHERE c.MEMBER_NO = m.MEMBER_NO
		AND c.AD_NO = ad.AD_NO
		AND CONTEST_NO = ${contestNo}
	</select>


	<!-- 북마크 카운트  -->
	<insert id="bookmarkCount" parameterType="contest">
		<selectKey keyProperty="bookmarkCount" resultType="_int" order="BEFORE">
			SELECT COUNT(*) AS BOOKMARK_COUNT
			FROM LIKE_CON 
			WHERE CONTEST_NO = ${contestNo}
		</selectKey>
		INSERT INTO LIKE_CON (LIKE_CON_NO, MEMBER_NO, CONTEST_NO)
		VALUES(SEQ_LIKE_CON_NO.NEXTVAL , ${memberNo}, ${contestNo})
	</insert>

<select id="getRecommendList" parameterType="int" resultMap="contest_rm">
	SELECT CONTEST_NO, CONTEST_TITLE, PRICE
	FROM CONTEST
	WHERE TYPE_NO = #{typeNo}
</select>

 <!-- 우승자 선정 페이지에서 참가자 리스트 불러오기 -->
 <select id = "selectWinnerList" resultMap="member_rm">
 
 </select>
 
 
</mapper>
